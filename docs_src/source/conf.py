# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.

import os
import sys

vcp_dir = os.path.join(os.path.abspath('.'), '..', '..')
sys.path.insert(0, os.path.abspath(vcp_dir))

try:
    import qtpyvcp
    qtpyvcp_available = True
except ImportError:
    qtpyvcp_available = False

try:
    import probe_basic
    probe_basic_available = True
except ImportError:
    probe_basic_available = False

# -- Project information -----------------------------------------------------

project = 'ProbeBasic'
copyright = '2021, Chris Polanski'
author = 'Chris Polanski'

# The short X.Y version.
if qtpyvcp_available:
    qtpyvcp_version = qtpyvcp.__version__.split('+')[0]
    # The full version, including alpha/beta/rc tags.
    qtpyvcp_release = qtpyvcp.__version__
    # The short commit ID
    qtpyvcp_commit = qtpyvcp.__version__.split('.')[2]
else:
    qtpyvcp_version = "Unknown"
    qtpyvcp_release = "Unknown"
    qtpyvcp_commit = "Unknown"

# The short X.Y version.
if probe_basic_available:
    pb_version = probe_basic.__version__.split('+')[0]
    # The full version, including alpha/beta/rc tags.
    pb_release = probe_basic.__version__
else:
    pb_version = "Unknown"
    pb_release = "Unknown"

# Handle version files gracefully
try:
    with open("/home/buildbot/versions/qtpyvcp_dev_version.txt", "r") as v_file:
        qtpyvcp_dev_latest_version = v_file.readline().rstrip("\n")
except FileNotFoundError:
    qtpyvcp_dev_latest_version = "Unknown"
    
try:
    with open("/home/buildbot/versions/pb_dev_version.txt", "r") as v_file:
        pb_dev_latest_version = v_file.readline().rstrip("\n")
except FileNotFoundError:
    pb_dev_latest_version = "Unknown"


rst_epilog = f"""
.. |code_version| replace:: {pb_version}
.. |code_release| replace:: {pb_release}
.. |qtpyvcp_amd64_deb| replace:: python3-qtpyvcp_{qtpyvcp_dev_latest_version}.dev_amd64.deb
.. |qtpyvcp_arm64_deb| replace:: python3-qtpyvcp_{qtpyvcp_dev_latest_version}.dev_arm64.deb
.. |qtpyvcp_amd64_deb_link| replace:: https://repository.qtpyvcp.com/repo/qtpyvcp-dev/python3-qtpyvcp_{qtpyvcp_dev_latest_version}.dev_amd64.deb
.. |qtpyvcp_arm64_deb_link| replace:: https://repository.qtpyvcp.com/repo/qtpyvcp-dev/python3-qtpyvcp_{qtpyvcp_dev_latest_version}.dev_arm.deb
.. |probe_basic_amd64_deb| replace:: python3-probe-basic_{pb_dev_latest_version}.dev_amd64.deb
.. |probe_basic_arm64_deb| replace:: python3-probe-basic_{pb_dev_latest_version}.dev_arm64.deb
.. |probe_basic_amd64_deb_link| replace:: https://repository.qtpyvcp.com/repo/probe-basic-dev/python3-probe-basic_{pb_dev_latest_version}.dev_amd64.deb
.. |probe_basic_arm64_deb_link| replace:: https://repository.qtpyvcp.com/repo/probe-basic-dev/python3-probe-basic_{pb_dev_latest_version}.dev_arm64.deb
"""

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.intersphinx',
    'sphinx.ext.githubpages',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'ProbeBasicdoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'ProbeBasic.tex', 'ProbeBasic Documentation',
     'Chris Polanski', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'ProbeBasic', 'ProbeBasic Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'ProbeBasic', 'ProbeBasic Documentation',
     author, 'ProbeBasic', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- Extension configuration -------------------------------------------------

# -- Options for intersphinx extension ---------------------------------------

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {'python': ('https://docs.python.org/3', None)}
